{"ast":null,"code":"var _jsxFileName = \"/Users/theairc/Documents/Programs/Projects/mixed/hackArtist/src/components/AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport './AuthModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthModal = ({\n  onClose\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  // Modal state\n  const [isLogin, setIsLogin] = useState(false);\n\n  // Form data state\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    location: '',\n    phone: '',\n    instagram: ''\n  });\n\n  // Categories state (for signup only)\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  // UI feedback states\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Predefined artist categories\n  const artistCategories = ['Painter', 'Sculptor', 'Digital Artist', 'Photographer', 'Illustrator', 'Mixed Media', 'Street Artist', 'Ceramic Artist', 'Textile Artist', 'Performance Artist', 'Other'];\n\n  // Handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle category selection (signup only)\n  const handleCategoryToggle = category => {\n    setSelectedCategories(prev => {\n      if (prev.includes(category)) {\n        return prev.filter(cat => cat !== category);\n      } else {\n        return [...prev, category];\n      }\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Set loading state and clear errors\n    setLoading(true);\n    setError('');\n    console.log('Form submission started');\n    console.log('Is login mode:', isLogin);\n    console.log('Form data:', formData);\n    try {\n      if (isLogin) {\n        // LOGIN LOGIC\n        if (!formData.email || !formData.password) {\n          throw new Error('Please fill in all fields');\n        }\n        console.log('Signing in user with email:', formData.email);\n        const userCredential = await signInWithEmailAndPassword(auth, formData.email, formData.password);\n        const user = userCredential.user;\n        console.log('User signed in successfully:', user.uid);\n      } else {\n        // SIGNUP LOGIC\n        if (selectedCategories.length === 0) {\n          throw new Error('Please select at least one artist category');\n        }\n        if (!formData.name || !formData.email || !formData.password || !formData.location) {\n          throw new Error('Please fill in all required fields');\n        }\n        console.log('Creating user with email:', formData.email);\n        const userCredential = await createUserWithEmailAndPassword(auth, formData.email, formData.password);\n        const user = userCredential.user;\n        console.log('User created successfully:', user.uid);\n\n        // Store artist data in Firestore\n        const artistData = {\n          uid: user.uid,\n          name: formData.name,\n          email: formData.email,\n          location: formData.location,\n          phone: formData.phone || '',\n          instagram: formData.instagram || '',\n          categories: selectedCategories,\n          createdAt: new Date().toISOString(),\n          profileComplete: true\n        };\n        console.log('Storing artist data in Firestore:', artistData);\n        await setDoc(doc(db, 'artists', user.uid), artistData);\n        console.log('Artist data stored successfully in Firestore');\n      }\n\n      // Redirect to artist dashboard\n      navigate('/artist-dashboard');\n    } catch (error) {\n      console.error('Authentication error:', error);\n      console.error('Error code:', error.code);\n      console.error('Error details:', error);\n\n      // More specific error messages\n      let errorMessage = 'An error occurred';\n      if (isLogin) {\n        if (error.code === 'auth/user-not-found') {\n          errorMessage = 'No account found with this email address.';\n        } else if (error.code === 'auth/wrong-password') {\n          errorMessage = 'Incorrect password. Please try again.';\n        } else if (error.code === 'auth/invalid-email') {\n          errorMessage = 'Please enter a valid email address.';\n        } else if (error.code === 'auth/user-disabled') {\n          errorMessage = 'This account has been disabled.';\n        } else if (error.code === 'auth/too-many-requests') {\n          errorMessage = 'Too many failed attempts. Please try again later.';\n        } else if (error.code === 'auth/network-request-failed') {\n          errorMessage = 'Network error. Please check your connection.';\n        }\n      } else {\n        if (error.code === 'auth/email-already-in-use') {\n          errorMessage = 'This email is already registered. Please use a different email.';\n        } else if (error.code === 'auth/weak-password') {\n          errorMessage = 'Password should be at least 6 characters long.';\n        } else if (error.code === 'auth/invalid-email') {\n          errorMessage = 'Please enter a valid email address.';\n        } else if (error.code === 'permission-denied') {\n          errorMessage = 'Permission denied. Please check your Firebase rules.';\n        } else if (error.code === 'unavailable') {\n          errorMessage = 'Service temporarily unavailable. Please try again.';\n        }\n      }\n      if (error.message && !error.code) {\n        errorMessage = error.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle between login and signup\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      location: '',\n      phone: '',\n      instagram: ''\n    });\n    setSelectedCategories([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-modal-backdrop\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form-title\",\n          children: isLogin ? 'Welcome Back' : 'Join Our Artist Community'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-subtitle\",\n          children: isLogin ? 'Sign in to your artist account' : 'Create your artist profile and start showcasing your work to the world'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-fields\",\n          children: [!isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Full Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              required: !isLogin,\n              placeholder: \"Enter your full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email Address *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              required: true,\n              placeholder: \"Enter your email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              required: true,\n              placeholder: isLogin ? \"Enter your password\" : \"Create a secure password\",\n              minLength: isLogin ? undefined : \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"location\",\n                children: \"Location *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"location\",\n                name: \"location\",\n                value: formData.location,\n                onChange: handleInputChange,\n                required: true,\n                placeholder: \"City, Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phone\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"phone\",\n                name: \"phone\",\n                value: formData.phone,\n                onChange: handleInputChange,\n                placeholder: \"Optional - Enter your phone number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"instagram\",\n                children: \"Instagram Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"instagram\",\n                name: \"instagram\",\n                value: formData.instagram,\n                onChange: handleInputChange,\n                placeholder: \"Optional - Your Instagram handle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"categories-label\",\n            children: \"What type of artist are you? *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categories-grid\",\n            children: artistCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `category-button ${selectedCategories.includes(category) ? 'selected' : ''}`,\n              onClick: () => handleCategoryToggle(category),\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          disabled: loading,\n          children: loading ? isLogin ? 'Signing In...' : 'Creating Account...' : isLogin ? 'Sign In' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [isLogin ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"link-button\",\n              onClick: toggleMode,\n              children: isLogin ? 'Sign up here' : 'Login here'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthModal, \"U0KhimUCwSsS8OzYQAwu37uCSE0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","doc","setDoc","auth","db","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthModal","onClose","_s","navigate","isLogin","setIsLogin","formData","setFormData","name","email","password","location","phone","instagram","selectedCategories","setSelectedCategories","loading","setLoading","error","setError","artistCategories","handleInputChange","e","value","target","prev","handleCategoryToggle","category","includes","filter","cat","handleSubmit","preventDefault","console","log","Error","userCredential","user","uid","length","artistData","categories","createdAt","Date","toISOString","profileComplete","code","errorMessage","message","toggleMode","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","placeholder","minLength","undefined","map","disabled","_c","$RefreshReg$"],"sources":["/Users/theairc/Documents/Programs/Projects/mixed/hackArtist/src/components/AuthModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport './AuthModal.css';\n\nconst AuthModal = ({ onClose }) => {\n  const navigate = useNavigate();\n  \n  // Modal state\n  const [isLogin, setIsLogin] = useState(false);\n  \n  // Form data state\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    location: '',\n    phone: '',\n    instagram: ''\n  });\n\n  // Categories state (for signup only)\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  \n  // UI feedback states\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Predefined artist categories\n  const artistCategories = [\n    'Painter',\n    'Sculptor',\n    'Digital Artist',\n    'Photographer',\n    'Illustrator',\n    'Mixed Media',\n    'Street Artist',\n    'Ceramic Artist',\n    'Textile Artist',\n    'Performance Artist',\n    'Other'\n  ];\n\n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle category selection (signup only)\n  const handleCategoryToggle = (category) => {\n    setSelectedCategories(prev => {\n      if (prev.includes(category)) {\n        return prev.filter(cat => cat !== category);\n      } else {\n        return [...prev, category];\n      }\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Set loading state and clear errors\n    setLoading(true);\n    setError('');\n\n    console.log('Form submission started');\n    console.log('Is login mode:', isLogin);\n    console.log('Form data:', formData);\n\n    try {\n      if (isLogin) {\n        // LOGIN LOGIC\n        if (!formData.email || !formData.password) {\n          throw new Error('Please fill in all fields');\n        }\n\n        console.log('Signing in user with email:', formData.email);\n        const userCredential = await signInWithEmailAndPassword(\n          auth,\n          formData.email,\n          formData.password\n        );\n\n        const user = userCredential.user;\n        console.log('User signed in successfully:', user.uid);\n\n      } else {\n        // SIGNUP LOGIC\n        if (selectedCategories.length === 0) {\n          throw new Error('Please select at least one artist category');\n        }\n\n        if (!formData.name || !formData.email || !formData.password || !formData.location) {\n          throw new Error('Please fill in all required fields');\n        }\n\n        console.log('Creating user with email:', formData.email);\n        const userCredential = await createUserWithEmailAndPassword(\n          auth,\n          formData.email,\n          formData.password\n        );\n\n        const user = userCredential.user;\n        console.log('User created successfully:', user.uid);\n\n        // Store artist data in Firestore\n        const artistData = {\n          uid: user.uid,\n          name: formData.name,\n          email: formData.email,\n          location: formData.location,\n          phone: formData.phone || '',\n          instagram: formData.instagram || '',\n          categories: selectedCategories,\n          createdAt: new Date().toISOString(),\n          profileComplete: true\n        };\n        \n        console.log('Storing artist data in Firestore:', artistData);\n        await setDoc(doc(db, 'artists', user.uid), artistData);\n        console.log('Artist data stored successfully in Firestore');\n      }\n\n      // Redirect to artist dashboard\n      navigate('/artist-dashboard');\n\n    } catch (error) {\n      console.error('Authentication error:', error);\n      console.error('Error code:', error.code);\n      console.error('Error details:', error);\n      \n      // More specific error messages\n      let errorMessage = 'An error occurred';\n      \n      if (isLogin) {\n        if (error.code === 'auth/user-not-found') {\n          errorMessage = 'No account found with this email address.';\n        } else if (error.code === 'auth/wrong-password') {\n          errorMessage = 'Incorrect password. Please try again.';\n        } else if (error.code === 'auth/invalid-email') {\n          errorMessage = 'Please enter a valid email address.';\n        } else if (error.code === 'auth/user-disabled') {\n          errorMessage = 'This account has been disabled.';\n        } else if (error.code === 'auth/too-many-requests') {\n          errorMessage = 'Too many failed attempts. Please try again later.';\n        } else if (error.code === 'auth/network-request-failed') {\n          errorMessage = 'Network error. Please check your connection.';\n        }\n      } else {\n        if (error.code === 'auth/email-already-in-use') {\n          errorMessage = 'This email is already registered. Please use a different email.';\n        } else if (error.code === 'auth/weak-password') {\n          errorMessage = 'Password should be at least 6 characters long.';\n        } else if (error.code === 'auth/invalid-email') {\n          errorMessage = 'Please enter a valid email address.';\n        } else if (error.code === 'permission-denied') {\n          errorMessage = 'Permission denied. Please check your Firebase rules.';\n        } else if (error.code === 'unavailable') {\n          errorMessage = 'Service temporarily unavailable. Please try again.';\n        }\n      }\n      \n      if (error.message && !error.code) {\n        errorMessage = error.message;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle between login and signup\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      location: '',\n      phone: '',\n      instagram: ''\n    });\n    setSelectedCategories([]);\n  };\n\n  return (\n    <div className=\"auth-modal-backdrop\" onClick={onClose}>\n      <div className=\"auth-modal-content\" onClick={(e) => e.stopPropagation()}>\n        {/* Close button */}\n        <button className=\"close-button\" onClick={onClose}>\n          ×\n        </button>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          <h2 className=\"form-title\">\n            {isLogin ? 'Welcome Back' : 'Join Our Artist Community'}\n          </h2>\n          <p className=\"form-subtitle\">\n            {isLogin \n              ? 'Sign in to your artist account' \n              : 'Create your artist profile and start showcasing your work to the world'\n            }\n          </p>\n\n          {/* Error display */}\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          {/* Form fields */}\n          <div className=\"form-fields\">\n            {!isLogin && (\n              <div className=\"input-group\">\n                <label htmlFor=\"name\">Full Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  required={!isLogin}\n                  placeholder=\"Enter your full name\"\n                />\n              </div>\n            )}\n\n            <div className=\"input-group\">\n              <label htmlFor=\"email\">Email Address *</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter your email address\"\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label htmlFor=\"password\">Password *</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                required\n                placeholder={isLogin ? \"Enter your password\" : \"Create a secure password\"}\n                minLength={isLogin ? undefined : \"6\"}\n              />\n            </div>\n\n            {!isLogin && (\n              <>\n                <div className=\"input-group\">\n                  <label htmlFor=\"location\">Location *</label>\n                  <input\n                    type=\"text\"\n                    id=\"location\"\n                    name=\"location\"\n                    value={formData.location}\n                    onChange={handleInputChange}\n                    required\n                    placeholder=\"City, Country\"\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label htmlFor=\"phone\">Phone Number</label>\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    placeholder=\"Optional - Enter your phone number\"\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label htmlFor=\"instagram\">Instagram Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"instagram\"\n                    name=\"instagram\"\n                    value={formData.instagram}\n                    onChange={handleInputChange}\n                    placeholder=\"Optional - Your Instagram handle\"\n                  />\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Artist Categories (signup only) */}\n          {!isLogin && (\n            <div className=\"categories-section\">\n              <label className=\"categories-label\">What type of artist are you? *</label>\n              <div className=\"categories-grid\">\n                {artistCategories.map((category) => (\n                  <button\n                    key={category}\n                    type=\"button\"\n                    className={`category-button ${selectedCategories.includes(category) ? 'selected' : ''}`}\n                    onClick={() => handleCategoryToggle(category)}\n                  >\n                    {category}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Submit button */}\n          <button\n            type=\"submit\"\n            className=\"submit-button\"\n            disabled={loading}\n          >\n            {loading \n              ? (isLogin ? 'Signing In...' : 'Creating Account...') \n              : (isLogin ? 'Sign In' : 'Create Account')\n            }\n          </button>\n\n          {/* Toggle mode */}\n          <div className=\"form-footer\">\n            <p>\n              {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\n              <button \n                type=\"button\" \n                className=\"link-button\"\n                onClick={toggleMode}\n              >\n                {isLogin ? 'Sign up here' : 'Login here'}\n              </button>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}